openapi: 3.0.1
info:
  title: REST API LLS
  description: LLS - Lehrlings Liefer System | Apprentice Delivery System
  contact:
    name: Lars-Thorsten Bilek
    email: lars.bilek@gmx.at
  version: "1.0"
servers:
- url: https://localhost:9002
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: UserOrderResource
  description: Apis for webshop
- name: UserResource
  description: Apis for the logged in user
- name: AdminModProductManagementResource
  description: Apis to manage products / Only for Admin and Mod
- name: AdminModGroceryWorkingDayManagementResource
  description: Apis to manage groceryWorkingDays / Only for Admin and Mod
- name: AdminModUserManagementResource
  description: Apis to manage user / Only for Admin and Mod
- name: AdminModOrderManagementResource
  description: Apis to manage orders / Only for Admin and Mod
- name: AdminModCategoryManagementResource
  description: Apis to manage categories / Only for Admin and Mod
- name: UserGroceryWorkingDayManagementResource
  description: Apis for groceryWorkingDays
paths:
  /api/user/:
    get:
      tags:
      - UserResource
      description: load logged in user
      operationId: loadUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
    put:
      tags:
      - UserResource
      description: update the current logged in user
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
  /api/portal/user/:
    get:
      tags:
      - AdminModUserManagementResource
      description: load all users with pagination and filter
      operationId: loadAllUsers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperUserOverviewDTO'
    put:
      tags:
      - AdminModUserManagementResource
      description: update user
      operationId: updateUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortalUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
    post:
      tags:
      - AdminModUserManagementResource
      description: create new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
  /api/portal/product/:
    get:
      tags:
      - AdminModProductManagementResource
      description: load all products with pagination and filter
      operationId: loadAllProducts
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      - name: isActive
        in: query
        required: false
        schema:
          type: boolean
      - name: isChecked
        in: query
        required: false
        schema:
          type: boolean
      - name: categoryId
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperProductOverviewDTO'
    put:
      tags:
      - AdminModProductManagementResource
      description: update category
      operationId: updateProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailDTO'
    post:
      tags:
      - AdminModProductManagementResource
      description: create new product
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailDTO'
  /api/portal/grocery-working-day/:
    get:
      tags:
      - AdminModGroceryWorkingDayManagementResource
      description: load all grocery working days with pagination and filter
      operationId: loadAllGroceryWorkingDays
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: goingUserId
        in: query
        required: false
        schema:
          type: string
      - name: payingUserId
        in: query
        required: false
        schema:
          type: string
      - name: date
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperGroceryWorkingDayDetailDTO'
    put:
      tags:
      - AdminModGroceryWorkingDayManagementResource
      description: update grocery working day
      operationId: updateGroceryWorkingDay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroceryWorkingDayDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
    post:
      tags:
      - AdminModGroceryWorkingDayManagementResource
      description: create new grocery working day
      operationId: createGroceryWorkingDay
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroceryWorkingDayDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
  /api/portal/category/:
    get:
      tags:
      - AdminModCategoryManagementResource
      description: load all categories with pagination and filter
      operationId: loadAllCategories
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperCategoryDetailDTO'
    put:
      tags:
      - AdminModCategoryManagementResource
      description: update category
      operationId: updateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailDTO'
    post:
      tags:
      - AdminModCategoryManagementResource
      description: create new category
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailDTO'
  /api/order/today/orders:
    get:
      tags:
      - UserOrderResource
      description: load all order for the paying user with pagination and filter
      operationId: loadTodayOrderForPayingUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDetailDTO'
    post:
      tags:
      - UserOrderResource
      description: create order for the current customer
      operationId: createOrderForCurrentCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailDTO'
  /api/grocery-working-day/remove/paying-users/:
    post:
      tags:
      - UserGroceryWorkingDayManagementResource
      description: remove current logged in user as paying users
      operationId: removeCurrentLoggedInUserAsPayingUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
  /api/grocery-working-day/remove/going-users/:
    post:
      tags:
      - UserGroceryWorkingDayManagementResource
      description: remove current logged in user to going users
      operationId: removeLoggedInUserToGoingUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
  /api/grocery-working-day/add/paying-users/:
    post:
      tags:
      - UserGroceryWorkingDayManagementResource
      description: set current logged in user as paying users
      operationId: setCurrentLoggedInUserAsPayingUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
  /api/grocery-working-day/add/going-users/:
    post:
      tags:
      - UserGroceryWorkingDayManagementResource
      description: add current logged in user to going users
      operationId: addLoggedInUserToGoingUsers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
  /api/user/current-user:
    get:
      tags:
      - UserResource
      description: load portal user (short info)
      operationId: loadPortalUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalUserDTO'
  /api/portal/user/{id}:
    get:
      tags:
      - AdminModUserManagementResource
      description: load user by id
      operationId: loadUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
  /api/portal/user/all:
    get:
      tags:
      - AdminModUserManagementResource
      description: load all users filter
      operationId: loadAllUsersWithoutPagination
      parameters:
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperUserOverviewDTO'
  /api/portal/product/{id}:
    get:
      tags:
      - AdminModProductManagementResource
      description: load product by id
      operationId: loadProductById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailDTO'
  /api/portal/order/{id}:
    get:
      tags:
      - AdminModOrderManagementResource
      description: load order by id
      operationId: loadOrderById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailDTO'
  /api/portal/order/:
    get:
      tags:
      - AdminModOrderManagementResource
      description: load all orders with pagination and filter
      operationId: loadAllOrders
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      - name: isPayed
        in: query
        required: false
        schema:
          type: boolean
      - name: paymentType
        in: query
        required: false
        schema:
          type: string
          enum:
          - CASH
          - PAYPAL
          - CREDIT_CARD
          - BANK_TRANSFER
      - name: orderDateFrom
        in: query
        required: false
        schema:
          type: string
          format: date
      - name: orderDateTo
        in: query
        required: false
        schema:
          type: string
          format: date
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperOrderOverviewDTO'
  /api/portal/category/{id}:
    get:
      tags:
      - AdminModCategoryManagementResource
      description: load category by id
      operationId: loadCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailDTO'
  /api/portal/category/all:
    get:
      tags:
      - AdminModCategoryManagementResource
      description: load all categories with filter
      operationId: loadAllCategoriesWithoutPagination
      parameters:
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperCategoryDetailDTO'
  /api/order/products:
    get:
      tags:
      - UserOrderResource
      description: load all products for shop
      operationId: loadAllProductsForShop
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      - name: categoryId
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperProductDetailDTO'
  /api/order/paying-user/orders:
    get:
      tags:
      - UserOrderResource
      description: load all order for the paying user with pagination and filter
      operationId: loadAllOrdersForPayingUser
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperOrderDetailDTO'
  /api/grocery-working-day/today:
    get:
      tags:
      - UserGroceryWorkingDayManagementResource
      description: load grocery working day from today
      operationId: loadOrCreateGroceryWorkingDayToday
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
components:
  schemas:
    UpdateUserDTO:
      required:
      - email
      - firstname
      - id
      - lastname
      - version
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        email:
          type: string
    UserDetailDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
        enabled:
          type: boolean
    UpdatePortalUserDTO:
      required:
      - email
      - enabled
      - firstname
      - id
      - lastname
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        roles:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
    UpdateProductDTO:
      required:
      - categoryId
      - id
      - isActive
      - isChecked
      - name
      - producer
      - quantity
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        name:
          type: string
        producer:
          type: string
        quantity:
          type: string
        price:
          minimum: 0
          type: number
          format: double
        isActive:
          type: boolean
        isChecked:
          type: boolean
        categoryId:
          type: string
    CategoryDetailDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    ProductDetailDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        name:
          type: string
        producer:
          type: string
        quantity:
          type: string
        price:
          type: number
          format: double
        isActive:
          type: boolean
        isChecked:
          type: boolean
        category:
          $ref: '#/components/schemas/CategoryDetailDTO'
    UpdateGroceryWorkingDayDTO:
      required:
      - id
      - status
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        goingUserIds:
          type: array
          items:
            type: string
        payingUserId:
          type: string
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
    GroceryWorkingDayDetailDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        date:
          type: string
          format: date
        goingUsers:
          type: array
          items:
            $ref: '#/components/schemas/UserOverviewDTO'
        payingUser:
          $ref: '#/components/schemas/UserOverviewDTO'
        status:
          type: string
          enum:
          - OPEN
          - CLOSED
    UserOverviewDTO:
      type: object
      properties:
        id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
    UpdateCategoryDTO:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    CreateUserDTO:
      required:
      - email
      - enabled
      - firstname
      - lastname
      type: object
      properties:
        firstname:
          type: string
        status:
          type: string
        lastname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        enabled:
          type: boolean
        roles:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
    CreateProductDTO:
      required:
      - categoryId
      - isActive
      - isChecked
      - name
      - producer
      - quantity
      type: object
      properties:
        name:
          type: string
        producer:
          type: string
        quantity:
          type: string
        price:
          minimum: 0
          type: number
          format: double
        isActive:
          type: boolean
        isChecked:
          type: boolean
        categoryId:
          type: string
    CreateGroceryWorkingDayDTO:
      required:
      - date
      type: object
      properties:
        date:
          type: string
          format: date
        goingUserIds:
          type: array
          items:
            type: string
        payingUserId:
          type: string
    CreateCategoryDTO:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    CreateOrderDTO:
      required:
      - paymentType
      type: object
      properties:
        paymentType:
          type: string
          enum:
          - CASH
          - PAYPAL
          - CREDIT_CARD
          - BANK_TRANSFER
        orderedItems:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/CreateOrderOrderItemDTO'
    CreateOrderOrderItemDTO:
      required:
      - productId
      type: object
      properties:
        productId:
          type: string
        orderedQuantity:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        note:
          type: string
    OrderDetailDTO:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/UserDetailDTO'
        isPayed:
          type: boolean
        groceryWorkingDay:
          $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
        paymentType:
          type: string
          enum:
          - CASH
          - PAYPAL
          - CREDIT_CARD
          - BANK_TRANSFER
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemDetailDTO'
        status:
          type: string
          enum:
          - ORDERED
          - IN_PROGRESS
          - READY_TO_PAY
          - DONE
          - CANCELLED
    OrderItemDetailDTO:
      type: object
      properties:
        id:
          type: string
        orderedQuantity:
          type: integer
          format: int32
        note:
          type: string
        oldProductPrice:
          type: number
          format: double
        product:
          $ref: '#/components/schemas/ProductDetailDTO'
    PortalUserDTO:
      type: object
      properties:
        id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
    ResponseWrapperUserOverviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserOverviewDTO'
        totalElements:
          type: integer
          format: int64
    ProductOverviewDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
          format: double
        isActive:
          type: boolean
        isChecked:
          type: boolean
        categoryName:
          type: string
    ResponseWrapperProductOverviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductOverviewDTO'
        totalElements:
          type: integer
          format: int64
    OrderItemOverviewDTO:
      type: object
      properties:
        id:
          type: string
        orderedQuantity:
          type: integer
          format: int32
        productName:
          type: string
        oldProductPrice:
          type: number
          format: double
    OrderOverviewDTO:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/UserOverviewDTO'
        isPayed:
          type: boolean
        orderDate:
          type: string
          format: date
        paymentType:
          type: string
          enum:
          - CASH
          - PAYPAL
          - CREDIT_CARD
          - BANK_TRANSFER
        orderItems:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemOverviewDTO'
        status:
          type: string
          enum:
          - ORDERED
          - IN_PROGRESS
          - READY_TO_PAY
          - DONE
          - CANCELLED
    ResponseWrapperOrderOverviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrderOverviewDTO'
        totalElements:
          type: integer
          format: int64
    ResponseWrapperGroceryWorkingDayDetailDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/GroceryWorkingDayDetailDTO'
        totalElements:
          type: integer
          format: int64
    ResponseWrapperCategoryDetailDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDetailDTO'
        totalElements:
          type: integer
          format: int64
    ResponseWrapperProductDetailDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailDTO'
        totalElements:
          type: integer
          format: int64
    ResponseWrapperOrderDetailDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetailDTO'
        totalElements:
          type: integer
          format: int64
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
