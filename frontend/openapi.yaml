openapi: 3.0.1
info:
  title: REST API LLS
  description: LLS - Lehrlings Liefer System | Apprentice Delivery System
  contact:
    name: Lars-Thorsten Bilek
    email: lars.bilek@gmx.at
  version: "1.0"
servers:
- url: https://localhost:9002
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: UserResource
  description: Apis for the logged in user
- name: AdminModUserManagementResource
  description: Apis to manage user / Only for Admin and Mod
- name: AdminModCategoryManagementResource
  description: Apis to manage categories / Only for Admin and Mod
paths:
  /api/user/:
    get:
      tags:
      - UserResource
      description: load logged in user
      operationId: loadUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
    put:
      tags:
      - UserResource
      description: update the current logged in user
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
  /api/portal/user/:
    get:
      tags:
      - AdminModUserManagementResource
      description: load all users with pagination and filter
      operationId: loadAllUsers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperUserOverviewDTO'
    put:
      tags:
      - AdminModUserManagementResource
      description: update user
      operationId: updateUser_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePortalUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
    post:
      tags:
      - AdminModUserManagementResource
      description: create new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
  /api/portal/category/:
    get:
      tags:
      - AdminModCategoryManagementResource
      description: load all categories with pagination and filter
      operationId: loadAllCategories
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: searchTerm
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseWrapperCategoryOverviewDTO'
    put:
      tags:
      - AdminModCategoryManagementResource
      description: update category
      operationId: updateCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailDTO'
    post:
      tags:
      - AdminModCategoryManagementResource
      description: create new category
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailDTO'
  /api/user/current-user:
    get:
      tags:
      - UserResource
      description: load portal user (short info)
      operationId: loadPortalUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortalUserDTO'
  /api/portal/user/{id}:
    get:
      tags:
      - AdminModUserManagementResource
      description: load user by id
      operationId: loadUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailDTO'
  /api/portal/category/{id}:
    get:
      tags:
      - AdminModCategoryManagementResource
      description: load category by id
      operationId: loadCategoryById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDetailDTO'
components:
  schemas:
    UpdateUserDTO:
      required:
      - email
      - firstname
      - id
      - lastname
      - version
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        email:
          type: string
    UserDetailDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
        enabled:
          type: boolean
    UpdatePortalUserDTO:
      required:
      - email
      - enabled
      - firstname
      - id
      - lastname
      type: object
      properties:
        id:
          type: string
        version:
          minimum: 0
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        email:
          type: string
        enabled:
          type: boolean
        roles:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
    UpdateCategoryDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    CategoryDetailDTO:
      type: object
      properties:
        id:
          type: string
        version:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    CreateUserDTO:
      required:
      - email
      - enabled
      - firstname
      - lastname
      type: object
      properties:
        firstname:
          type: string
        status:
          type: string
        lastname:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        location:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        enabled:
          type: boolean
        roles:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
    CreateCategoryDTO:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    PortalUserDTO:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        roles:
          type: array
          items:
            type: string
            enum:
            - ADMIN
            - MOD
            - USER
    ResponseWrapperUserOverviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserOverviewDTO'
        totalElements:
          type: integer
          format: int64
    UserOverviewDTO:
      type: object
      properties:
        id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
    CategoryOverviewDTO:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
    ResponseWrapperCategoryOverviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CategoryOverviewDTO'
        totalElements:
          type: integer
          format: int64
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
