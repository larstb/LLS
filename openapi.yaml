openapi: 3.0.1
info:
  title: REST API LLS
  description: LLS - Lehrlings Liefer System | Apprentice Delivery System
  contact:
    name: Lars-Thorsten Bilek
    email: lars.bilek@gmx.at
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/user/:
    get:
      tags:
      - user-crud-api
      operationId: getUserOverView
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapperUserOverviewDTO'
    put:
      tags:
      - user-crud-api
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
    post:
      tags:
      - user-crud-api
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateDTO'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /api/user/{id}:
    get:
      tags:
      - user-crud-api
      operationId: getUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDTO'
  /api/user/current:
    get:
      tags:
      - auth-user-api
      operationId: getCurrentAuthUser
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticatedUserResponse'
components:
  schemas:
    UserDTO:
      required:
      - email
      - firstname
      - id
      - isActive
      - lastname
      - phoneNumber
      - role
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        location:
          type: string
        role:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        isActive:
          type: boolean
    UserCreateDTO:
      required:
      - email
      - firstname
      - lastname
      - paypalLink
      - phoneNumber
      - role
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        status:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        location:
          type: string
        role:
          type: string
        iban:
          type: string
        paypalLink:
          type: string
        isActive:
          type: boolean
    AuthenticatedUserResponse:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        role:
          type: array
          items:
            type: string
    ResponseWrapperUserOverviewDTO:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserOverviewDTO'
        totalElements:
          type: integer
          format: int64
    UserOverviewDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        role:
          type: string
        isActive:
          type: boolean
  securitySchemes:
    Bearer Authentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
